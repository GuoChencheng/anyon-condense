name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# 同一分支的重复构建自动取消旧的
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install project (editable) and tools
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      # —— 下面是你关心的四步检查 ——

      - name: Jsonschema smoke (examples)
        run: |
          python - <<'PY'
          from pathlib import Path
          import json
          from jsonschema import Draft202012Validator

          root = Path.cwd()
          checks = {
              "schemas/mfusion_input.schema.json": "tests/examples/Vec_Z2_mfusion.json",
              "schemas/umtc_input.schema.json": "tests/examples/toric_umtc_input.min.json",
          }

          for schema_rel, example_rel in checks.items():
              schema_path = root / schema_rel
              example_path = root / example_rel

              if not schema_path.exists():
                  raise SystemExit(f"Missing schema file: {schema_path}")
              if not example_path.exists():
                  raise SystemExit(f"Missing example file: {example_path}")

              schema = json.loads(schema_path.read_text(encoding="utf-8"))
              document = json.loads(example_path.read_text(encoding="utf-8"))
              Draft202012Validator(schema).validate(document)

          print("jsonschema smoke PASS")
          PY

      - name: Ruff (lint)
        run: ruff check anyon_condense

      - name: Mypy (type check)
        run: mypy anyon_condense

      - name: Pytest (unit tests)
        run: pytest -q

      # （可选）失败时上传 pytest 的简单日志，方便定位
      - name: On failure, print tree and config
        if: failure()
        run: |
          echo "=== repo tree ==="
          ls -R
          echo "=== python version ==="
          python -V
          echo "=== pip list ==="
          pip list
