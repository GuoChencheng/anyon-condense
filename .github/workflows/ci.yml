name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree (debug)
        run: |
          pwd
          ls -la
          echo "----"
          find . -maxdepth 3 -type f | sort

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install project and tools
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install jsonschema pytest mypy ruff pre-commit

      # —— Schema 冒烟校验（根目录 paths）——
      - name: Jsonschema smoke (examples)
        run: |
          python - <<'PY'
          import json
          from jsonschema import Draft202012Validator
          # mfusion: good example
          with open("schemas/mfusion_input.schema.json") as f: sch = json.load(f)
          with open("tests/examples/Vec_Z2_mfusion.json") as f: doc = json.load(f)
          Draft202012Validator(sch).validate(doc)
          # umtc_input: good example
          with open("schemas/umtc_input.schema.json") as f: sch2 = json.load(f)
          with open("tests/examples/toric_umtc_input.min.json") as f: doc2 = json.load(f)
          Draft202012Validator(sch2).validate(doc2)
          print("jsonschema smoke PASS")
          PY

      - name: Ruff (lint)
        run: ruff check anyon_condense

      - name: Mypy (type check)
        run: mypy anyon_condense

      - name: Pytest
        run: pytest -q

      # 失败时打印更多信息，方便排查
      - name: On failure, print env info
        if: failure()
        run: |
          echo "=== python ==="; python -V
          echo "=== pip list (top 50)==="; pip list | head -n 50
          echo "=== tree (top) ==="; find . -maxdepth 2 -type d -print
